###### AuriStor CSI Driver Chart #####

#################################################
### FROM FILE: templates/controller.yaml
#################################################

{{- if ne .Values.runArgs.platform "openshift-container-platform" }}
---
{{ end }}
####################################
###    Auristor CSI Controller   ###
####################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: auristorfs-csi-controller-config
data:
  {{ if .Values.csiDriver.microServices }}
  externalVolumeManagerURL: {{ .Values.csiDriver.microServices.externalVolumeManagerURL }}
  {{ else }}
  externalVolumeManagerURL: "http://auristorfs-volume-manager"
  {{ end }}

  defaultCacheManager: {{ .Values.csiDriver.cacheManager.defaultCacheManager }}    # kafs or auristor

  logLevel: {{ .Values.csiDriver.logging.logLevel | default "INFO" | quote }}
  flattenLog: {{ .Values.csiDriver.logging.flattenLog | default "false" | quote }}


  {{ if .Values.csiDriver.debug }}
  # Debugging Values
  pvUIDLength: {{ .Values.csiDriver.debug.pvUIDLength | default "10" | quote }}
  debugShowCsiRequests: {{ .Values.csiDriver.debug.debugShowCsiRequests | default "false" | quote }}
  debugShowMounts: {{ .Values.csiDriver.debug.debugShowMounts | default "false" | quote }}
  debugShowExecs: {{ .Values.csiDriver.debug.debugShowExecs | default "false" | quote }}
  {{ end }}
---

apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
 name: auristorfs.csi.auristor.com
spec:
  volumeLifecycleModes:
  - Persistent
  - Ephemeral
  podInfoOnMount: true
  attachRequired: true

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: auristorfs-csi-controller
spec:
  serviceName: auristorfs-csi-svc
  replicas: 1
  selector:
    matchLabels:
      app: auristorfs-csi-controller
  template:
    metadata:
      labels:
        app: auristorfs-csi-controller
    spec:
      serviceAccountName: auristorfs-csi
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 3
      containers:

        - name: controller
          image: {{ .Values.csiDriver.image.auristorRegistry }}/auristorfs-csi:{{ .Values.csiDriver.image.auristorCsiVersion }}
          imagePullPolicy: {{ .Values.csiDriver.image.csiDriverImagePullPolicy | quote }}
          securityContext:
            privileged: true

          envFrom:
          - configMapRef:
              name: auristorfs-csi-controller-config
          env:
            - name: SERVICE_TYPE
              value: "Controller"
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CSI_DOMAIN_SOCKET
              value: "/csi/csi.sock"
            - name: IS_MOUNT_SELINUX
              value: {{ .Values.csiDriver.afsMount.mountSeLinuxFS | default "false" | quote }}
            - name: AURISTORFS_MOUNT_OPTIONS
              value: {{ .Values.csiDriver.afsMount.auristorfsMountOptions | default " " | quote }}

          ports:
          # - containerPort: 9898
          #   name: healthz
          #   protocol: TCP
          # livenessProbe:                  # TODO - Implement later
          #   failureThreshold: 10
          #   httpGet:
          #     path: /healthz
          #     port: healthz
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 3
          #   periodSeconds: 2

          volumeMounts:

            - mountPath: /csi
              name: controller-socket-dir

            {{ if .Values.csiDriver.cacheManager.afsRootDir }}
            - mountPath: /root/afs
              name: afs-root
            {{ end }}

            - mountPath: /root/appVar
              name: app-var

        - name: csi-attacher
          image: {{ .Values.csiDriver.image.k8sSigStorageRegistry }}/csi-attacher:v3.5.0
          imagePullPolicy: {{ .Values.csiDriver.image.k8sSigStorageImagePullPolicy | quote }}
          securityContext:
            privileged: true
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          volumeMounts:
          - mountPath: /csi
            name: controller-socket-dir

        - name: csi-provisioner
          image: {{ .Values.csiDriver.image.k8sSigStorageRegistry }}/csi-provisioner:v3.2.1
          imagePullPolicy: {{ .Values.csiDriver.image.k8sSigStorageImagePullPolicy | quote }}
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            {{- if .Values.csiDriver.persistentVolumeNaming }}
            {{- if .Values.csiDriver.persistentVolumeNaming.volumeNamePrefix }}
            - --volume-name-prefix={{ .Values.csiDriver.persistentVolumeNaming.volumeNamePrefix}}
            {{ end }}
            {{ end }}
            {{- if .Values.csiDriver.debug }}
            {{- if .Values.csiDriver.debug.volumeNameUuidLength }}
            - --volume-name-uuid-length={{ .Values.csiDriver.debug.volumeNameUuidLength}} # DEBUG/TESTING ONLY -  Small value during testing/debugging, otherwise comment/remove arg
            {{ end }}
            {{ end }}
            - --extra-create-metadata=true # Include of PVC, PVC-Namespace and PV to be included in Controller.CreateVolume parameteters

          volumeMounts:
            - mountPath: /csi
              name: controller-socket-dir

        - name: liveness-probe
          image: {{ .Values.csiDriver.image.k8sSigStorageRegistry }}/livenessprobe:v2.7.0
          imagePullPolicy: {{ .Values.csiDriver.image.k8sSigStorageImagePullPolicy | quote }}
          securityContext:
            privileged: true
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9898
          volumeMounts:
          - mountPath: /csi
            name: controller-socket-dir

      volumes:
        - name: controller-socket-dir
          emptyDir: {}

        {{ if .Values.csiDriver.cacheManager.afsRootDir }}
        - name: afs-root
          hostPath:
            path: /afs
        {{ end }}

        - name: app-var
          configMap:
            name: auristorfs-csi-node-config



#################################################
### FROM FILE: templates/node.yaml
#################################################

---
####################################
###       Auristor CSI Node      ###
####################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: auristorfs-csi-node-config
data:
  {{ if .Values.csiDriver.microServices }}
  externalVolumeManagerURL: {{ .Values.csiDriver.microServices.externalVolumeManagerURL }}
  {{ else }}
  externalVolumeManagerURL: "http://auristorfs-volume-manager"
  {{ end }}

  defaultCacheManager: {{ .Values.csiDriver.cacheManager.defaultCacheManager }}    # kafs or auristor

  logLevel: {{ .Values.csiDriver.logging.logLevel | default "INFO" | quote }}
  flattenLog: {{ .Values.csiDriver.logging.flattenLog | default "false" | quote }}

  {{ if .Values.csiDriver.debug }}
  # Debugging Values
  debugShowCsiRequests: {{ .Values.csiDriver.debug.debugShowCsiRequests | default "false" | quote }}
  debugShowMounts: {{ .Values.csiDriver.debug.debugShowMounts | default "false" | quote }}
  debugShowExecs: {{ .Values.csiDriver.debug.debugShowExecs | default "false" | quote }}
  {{ end }}
---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: auristorfs-csi-node
spec:
  selector:
    matchLabels:
      app: auristorfs-csi-node
  template:
    metadata:
      labels:
        app: auristorfs-csi-node
    spec:
      serviceAccountName: auristorfs-csi
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 3
      containers:

        - name: node
          image: {{ .Values.csiDriver.image.auristorRegistry }}/auristorfs-csi:{{ .Values.csiDriver.image.auristorCsiVersion }}
          imagePullPolicy: {{ .Values.csiDriver.image.csiDriverImagePullPolicy | quote }}
          envFrom:
          - configMapRef:
              name: auristorfs-csi-node-config
          env:
            - name: SERVICE_TYPE
              value: "Node"
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CSI_DOMAIN_SOCKET
              value: "/csi/csi.sock"
            - name: IS_MOUNT_SELINUX
              value: {{ .Values.csiDriver.afsMount.mountSeLinuxFS | default "false" | quote }}
            - name: AURISTORFS_MOUNT_OPTIONS
              value: {{ .Values.csiDriver.afsMount.auristorfsMountOptions | default " " | quote }}

          securityContext:
            privileged: true
          # ports:
          # - containerPort: 9888
          #   name: healthz
          #   protocol: TCP
          # livenessProbe:              # TODO - implement this later
          #   failureThreshold: 5
          #   httpGet:
          #     path: /healthz
          #     port: healthz
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 3
          #   periodSeconds: 2

          volumeMounts:

            - name: node-socket-dir
              mountPath: /csi

            - name: volume-mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional

            {{ if .Values.csiDriver.cacheManager.afsRootDir }}
            - name: afs-root
              mountPath: /root/afs
            {{ end }}

            - name: app-var
              mountPath: /root/appVar

        - name: node-driver-registrar
          image: {{ .Values.csiDriver.image.k8sSigStorageRegistry }}/csi-node-driver-registrar:v2.5.1
          imagePullPolicy: {{ .Values.csiDriver.image.k8sSigStorageImagePullPolicy | quote }}
          securityContext:
            privileged: true
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi.auristor.com           /registration/csi.auristor.com-reg.sock"]
          args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.auristor.com/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
          - name: node-socket-dir
            mountPath: /csi
          - name: registration-dir
            mountPath: /registration/

        - name: liveness-probe
          image: {{ .Values.csiDriver.image.k8sSigStorageRegistry }}/livenessprobe:v2.7.0
          imagePullPolicy: {{ .Values.csiDriver.image.k8sSigStorageImagePullPolicy | quote }}
          securityContext:
            privileged: true
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9898
          volumeMounts:
          - mountPath: /csi
            name: node-socket-dir

      volumes:

        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory

        - name: node-socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.auristor.com
            type: DirectoryOrCreate

        - name: volume-mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory

        {{ if .Values.csiDriver.cacheManager.afsRootDir }}
        - name: afs-root
          hostPath:
            path: {{ .Values.csiDriver.cacheManager.afsRootDir }}
            type: Directory
        {{ end }}

        - name: app-var
          configMap:
            name: auristorfs-csi-node-config


#################################################
### FROM FILE: templates/volumeManager.yaml
#################################################

---
####################################
###    Auristor Volume Manager   ###
####################################

apiVersion: v1
kind: Service
metadata:
  name: auristorfs-volume-manager
  labels:
    app: auristorfs-volume-manager
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    name: auristorfs-api
  selector:
    app: auristorfs-volume-manager

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: auristorfs-volume-manager-config
data:
  defaultCacheManager: "auristor"
  apiServerPort: "80"

  logLevel: {{ .Values.csiDriver.logging.logLevel | default "INFO" | quote }}
  flattenLog: {{ .Values.csiDriver.logging.flattenLog | default "false" | quote }}

  {{ if .Values.csiDriver.debug }}
  # Debugging Values
  debugShowMounts: {{ .Values.csiDriver.debug.debugShowMounts | default "false" | quote }}
  debugShowExecs: {{ .Values.csiDriver.debug.debugShowExecs | default "false" | quote }}
  {{ end }}

  # Debugging Values
  {{ if .Values.csiDriver.externalVolumeManager }}
  persistentVolumeReadyToCreateValidation: {{ .Values.csiDriver.externalVolumeManager.persistentVolumeReadyToCreateValidation | default "None" | quote }}
  persistentVolumeReadyToAttachOntoNodeValidation: {{ .Values.csiDriver.externalVolumeManager.persistentVolumeReadyToAttachOntoNodeValidation | default "None" | quote }}
  persistentVolumeReadyForFirstConsumerOnNodeValidation: {{ .Values.csiDriver.externalVolumeManager.persistentVolumeReadyForFirstConsumerOnNodeValidation | default "None" | quote }}
  persistentVolumeReadyToMountOntoPodResponseValidation: {{ .Values.csiDriver.externalVolumeManager.persistentVolumeReadyToMountOntoPodResponseValidation | default "None" | quote }}
  {{ end }}
---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: auristorfs-api
spec:
  serviceName: auristorfs-csi-svc
  replicas: 1
  selector:
    matchLabels:
      app: auristorfs-volume-manager
  template:
    metadata:
      labels:
        app: auristorfs-volume-manager
    spec:
      serviceAccountName: auristorfs-csi
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 3
      containers:
        - name: auristorfs-volume-manager
          image: {{ .Values.csiDriver.image.auristorRegistry }}/auristorfs-csi:{{ .Values.csiDriver.image.auristorCsiVersion }}
          imagePullPolicy: {{ .Values.csiDriver.image.csiDriverImagePullPolicy | quote }}
          securityContext:
            privileged: true
          envFrom:
          - configMapRef:
              name: auristorfs-volume-manager-config
          env:
            - name: VOLUME_MANAGER
              value: "true"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          ports:
          - containerPort: 8080
            name: auristorfs-api

            protocol: TCP
          # - containerPort: 9898
          #   name: healthz
          #   protocol: TCP



#################################################
### FROM FILE: templates/sroPermissions.yaml
#################################################


{{- if eq .Values.runArgs.platform "openshift-container-platform" }}
---
####################################
###     CSI Extra Permissions    ###
####################################

apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: Allow privileged
    release.openshift.io/create-only: "true"
  name: auristorfs-csi-uber
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: true
allowedCapabilities:
- 'SYS_ADMIN'
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{.Values.specialresource.spec.namespace}}:auristorfs-csi
volumes:
- emptyDir
- hostPath
- secret
- configMap
{{ end }}
