#!/usr/bin/env bash
set -euf -o pipefail
SCRIPTPATH=$( cd $(dirname $0) ; pwd -P )
APP_ROOT=$( cd $SCRIPTPATH/.. ; pwd -P )

getVersion() {
  echo Grepping: $(grep version $1)
  grep version $1
  grep version $1 | awk '{ print $2 }' 
}

SPECIAL_RESOURCE_NAMESPACE=auristorfs-client

CHART=$APP_ROOT/chart/Chart.yaml
CHART_VERSION=$(grep version $CHART | awk '{ print $2 }')

SPECIAL_RESOURCE=$APP_ROOT/auristorfs-client-special-resource.yaml

echo == BUILDING Helm Charts ConfigMap for Special Resource version: $CHART_VERSION

$APP_ROOT/bin/verifyVersions $CHART $SPECIAL_RESOURCE "Prototype Special Resource version does not match Chart version"

if [ "$?" -ne 0 ]; then
    echo ===== Special Resource Chart build failed
    exit 1
fi

SOURCE_ROOT=$APP_ROOT/chart
CHART_VERSION_ROOT=$APP_ROOT/chartVersions/$CHART_VERSION
BUILD_ROOT=$CHART_VERSION_ROOT/build

rm -rf $CHART_VERSION_ROOT
rm -rf $BUILD_ROOT

mkdir -p $CHART_VERSION_ROOT
mkdir -p $BUILD_ROOT

cp $APP_ROOT/auristorfs-client-special-resource.yaml  $CHART_VERSION_ROOT
cp $SOURCE_ROOT/README.md $CHART_VERSION_ROOT/README.md


cp $SOURCE_ROOT/Chart.yaml $BUILD_ROOT
cp -r $SOURCE_ROOT/templates $BUILD_ROOT

cd $BUILD_ROOT
helm package .   # Create auristorfs-client-$CHART_VERSION.tgz

helm repo index . --url=cm://auristorfs-client/auristorfs-client-chart -n $SPECIAL_RESOURCE_NAMESPACE

# Create ConfigMap object
oc create cm  \
          auristorfs-client-chart \
          -n $SPECIAL_RESOURCE_NAMESPACE  \
          --from-file=index.yaml \
          --from-file=auristorfs-client-$CHART_VERSION.tgz \
          --dry-run=client  \
          -o yaml >$CHART_VERSION_ROOT/auristorfs-client-chart.yaml

rm -rf $BUILD_ROOT
